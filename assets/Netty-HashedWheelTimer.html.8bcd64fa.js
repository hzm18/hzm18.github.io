import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.4d0b9302.js";const p={},e=t(`<h1 id="hashedwheeltimer" tabindex="-1"><a class="header-anchor" href="#hashedwheeltimer" aria-hidden="true">#</a> HashedWheelTimer</h1><h2 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h2><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.netty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>netty-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.82.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HashedWheelTimer</span> timer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashedWheelTimer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;current timestamp=&quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    timer<span class="token punctuation">.</span><span class="token function">newTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>timeout<span class="token punctuation">.</span><span class="token function">isExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;task execute,current timestamp=&quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    timer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hashedwheeltimer\u7684\u4E00\u4E9B\u4E1C\u897F" tabindex="-1"><a class="header-anchor" href="#hashedwheeltimer\u7684\u4E00\u4E9B\u4E1C\u897F" aria-hidden="true">#</a> HashedWheelTimer\u7684\u4E00\u4E9B\u4E1C\u897F</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">HashedWheelTimer</span><span class="token punctuation">(</span>
    <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">,</span>
    <span class="token keyword">long</span> tickDuration<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span> <span class="token keyword">int</span> ticksPerWheel<span class="token punctuation">,</span> <span class="token keyword">boolean</span> leakDetection<span class="token punctuation">,</span>
    <span class="token keyword">long</span> maxPendingTimeouts<span class="token punctuation">,</span> <span class="token class-name">Executor</span> taskExecutor<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token function">checkNotNull</span><span class="token punctuation">(</span>threadFactory<span class="token punctuation">,</span> <span class="token string">&quot;threadFactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">checkNotNull</span><span class="token punctuation">(</span>unit<span class="token punctuation">,</span> <span class="token string">&quot;unit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">checkPositive</span><span class="token punctuation">(</span>tickDuration<span class="token punctuation">,</span> <span class="token string">&quot;tickDuration&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">checkPositive</span><span class="token punctuation">(</span>ticksPerWheel<span class="token punctuation">,</span> <span class="token string">&quot;ticksPerWheel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>taskExecutor <span class="token operator">=</span> <span class="token function">checkNotNull</span><span class="token punctuation">(</span>taskExecutor<span class="token punctuation">,</span> <span class="token string">&quot;taskExecutor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u521B\u5EFAHashedWheelBucket[]\uFF0C\u68C0\u67E5ticksPerWheel\u4E0D\u8D85\u8FC72^30\u4E14\u4F1Anormalize\u62102^N\uFF08&gt;=ticksPerWheel\uFF09</span>
    wheel <span class="token operator">=</span> <span class="token function">createWheel</span><span class="token punctuation">(</span>ticksPerWheel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mask <span class="token operator">=</span> wheel<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06tick\u65F6\u957F\u7EDF\u4E00\u6362\u7B97\u4E3A\u7EB3\u79D2</span>
    <span class="token keyword">long</span> duration <span class="token operator">=</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>tickDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679Ctick\u65F6\u957F\u8D85\u8FC7</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>duration <span class="token operator">&gt;=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span> <span class="token operator">/</span> wheel<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
            <span class="token string">&quot;tickDuration: %d (expected: 0 &lt; tickDuration in nanos &lt; %d&quot;</span><span class="token punctuation">,</span>
            tickDuration<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span> <span class="token operator">/</span> wheel<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
		<span class="token comment">// \u5982\u679C\u5C0F\u4E8E1\u6BEB\u79D2\u5219\u91CD\u7F6E\u62101\u6BEB\u79D2</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>duration <span class="token operator">&lt;</span> <span class="token constant">MILLISECOND_NANOS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Configured tickDuration {} smaller than {}, using 1ms.&quot;</span><span class="token punctuation">,</span>
                    tickDuration<span class="token punctuation">,</span> <span class="token constant">MILLISECOND_NANOS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tickDuration <span class="token operator">=</span> <span class="token constant">MILLISECOND_NANOS</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tickDuration <span class="token operator">=</span> duration<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u521B\u5EFA\u4E00\u6761\u5DE5\u4F5C\u7EBF\u7A0B\u7528\u6765\u8FD0\u884Cwork</span>
    workerThread <span class="token operator">=</span> threadFactory<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span>worker<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6CC4\u6F0F\u68C0\u6D4B</span>
    leak <span class="token operator">=</span> leakDetection <span class="token operator">||</span> <span class="token operator">!</span>workerThread<span class="token punctuation">.</span><span class="token function">isDaemon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> leakDetector<span class="token punctuation">.</span><span class="token function">track</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6700\u591Apending\u7684timeout\u6570\uFF0C\u5982\u6DFB\u52A0timeout\u65F6\u8D85\u8FC7\u4E86\u5219\u629B\u51FA\u5F02\u5E38RejectedExecutionException\uFF0C\u9ED8\u8BA4\u4E3A-1\u5373\u65E0\u9650\u5236</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>maxPendingTimeouts <span class="token operator">=</span> maxPendingTimeouts<span class="token punctuation">;</span>
    
	<span class="token comment">// \u5982\u679CHashedWheelTimer\u5B9E\u4F8B\u6570\u8D85\u8FC7\u9650\u5236\uFF08INSTANCE_COUNT_LIMIT\u4E3A64\uFF09\uFF0C\u5219warn\u4E00\u6B21</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">INSTANCE_COUNTER</span><span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token constant">INSTANCE_COUNT_LIMIT</span> <span class="token operator">&amp;&amp;</span>
        <span class="token constant">WARNED_TOO_MANY_INSTANCES</span><span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reportTooManyInstances</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u52A0\u5165\u4E00\u4E2Atimeout\u5176\u5B9E\u4E0D\u662F\u76F4\u63A5\u5C31\u627E\u5230bucket\u5C31\u52A0\u5165\u5230\u5176\u4E2D\u7684\u94FE\u8868\uFF0C\u800C\u662F\u5148\u653E\u5230\u961F\u5217\u4E2D\uFF0C\u6BCF\u8FC7\u4E00\u6B21tick\u518D\u53D6\u51FA\u6765\u628A\u5B83\u4EEC\u653E\u5230\u5BF9\u5E94\u7684bucket\u4E2D\u53BB</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Timeout</span> <span class="token function">newTimeout</span><span class="token punctuation">(</span><span class="token class-name">TimerTask</span> task<span class="token punctuation">,</span> <span class="token keyword">long</span> delay<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkNotNull</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token string">&quot;task&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">checkNotNull</span><span class="token punctuation">(</span>unit<span class="token punctuation">,</span> <span class="token string">&quot;unit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">long</span> pendingTimeoutsCount <span class="token operator">=</span> pendingTimeouts<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>maxPendingTimeouts <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> pendingTimeoutsCount <span class="token operator">&gt;</span> maxPendingTimeouts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pendingTimeouts<span class="token punctuation">.</span><span class="token function">decrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RejectedExecutionException</span><span class="token punctuation">(</span><span class="token string">&quot;Number of pending timeouts (&quot;</span>
            <span class="token operator">+</span> pendingTimeoutsCount <span class="token operator">+</span> <span class="token string">&quot;) is greater than or equal to maximum allowed pending &quot;</span>
            <span class="token operator">+</span> <span class="token string">&quot;timeouts (&quot;</span> <span class="token operator">+</span> maxPendingTimeouts <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5C1D\u8BD5\u4FEE\u6539state\u4E3A\u5F00\u59CB\u72B6\u6001</span>
    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Add the timeout to the timeout queue which will be processed on the next tick.</span>
    <span class="token comment">// During processing all the queued HashedWheelTimeouts will be added to the correct HashedWheelBucket.</span>
    <span class="token keyword">long</span> deadline <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span> <span class="token operator">-</span> startTime<span class="token punctuation">;</span>

    <span class="token comment">// Guard against overflow.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> deadline <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        deadline <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2Atimeout,\u5E76\u52A0\u5165\u5230timeouts\u7684\u961F\u5217\u4E2D\uFF0C\u8BE5\u961F\u5217\u662FJCTools\u7684MpscQueue</span>
    <span class="token class-name">HashedWheelTimeout</span> timeout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashedWheelTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> task<span class="token punctuation">,</span> deadline<span class="token punctuation">)</span><span class="token punctuation">;</span>
    timeouts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> timeout<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5185\u90E8\u7684\u51E0\u4E2A\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u7684\u51E0\u4E2A\u7C7B" aria-hidden="true">#</a> \u5185\u90E8\u7684\u51E0\u4E2A\u7C7B\uFF1A</h2><h3 id="hashedwheelbucket" tabindex="-1"><a class="header-anchor" href="#hashedwheelbucket" aria-hidden="true">#</a> HashedWheelBucket</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">HashedWheelBucket</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u94FE\u8868\u7ED3\u6784\uFF0C\u5728bucket\u4E2D\u4FDD\u5B58\u5B83\u7684\u5934\u5C3E\u8282\u70B9\uFF0Ctimeout\u4E2D\u4FDD\u5B58\u524D\u9A71\u540E\u7EE7\u8282\u70B9</span>
        <span class="token keyword">private</span> <span class="token class-name">HashedWheelTimeout</span> head<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">HashedWheelTimeout</span> tail<span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * \u6DFB\u52A0HashedWheelTimeout\u5230bucket\u4E2D
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addTimeout</span><span class="token punctuation">(</span><span class="token class-name">HashedWheelTimeout</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">assert</span> timeout<span class="token punctuation">.</span>bucket <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            timeout<span class="token punctuation">.</span>bucket <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                head <span class="token operator">=</span> tail <span class="token operator">=</span> timeout<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                tail<span class="token punctuation">.</span>next <span class="token operator">=</span> timeout<span class="token punctuation">;</span>
                timeout<span class="token punctuation">.</span>prev <span class="token operator">=</span> tail<span class="token punctuation">;</span>
                tail <span class="token operator">=</span> timeout<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Expire all <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">HashedWheelTimeout</span></span><span class="token punctuation">}</span>s for the given <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">deadline</span></span><span class="token punctuation">}</span>.
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">expireTimeouts</span><span class="token punctuation">(</span><span class="token keyword">long</span> deadline<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">HashedWheelTimeout</span> timeout <span class="token operator">=</span> head<span class="token punctuation">;</span>

            <span class="token comment">// process all timeouts</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>timeout <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">HashedWheelTimeout</span> next <span class="token operator">=</span> timeout<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token comment">// \u5982\u679Crounds\u5C0F\u4E8E\u7B49\u4E8E0\u5219\u8FDB\u5165</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">.</span>remainingRounds <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u4ECEtimeout\u94FE\u8868\u79FB\u9664\u6389</span>
                    next <span class="token operator">=</span> <span class="token function">remove</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u5224\u65ADdeadline\u662F\u5426\u5DF2\u7ECF\u8FC7\u4E86</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">.</span>deadline <span class="token operator">&lt;=</span> deadline<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u8BBE\u7F6Etimeout\u7684\u72B6\u6001\u5E76\u6267\u884C\u56DE\u8C03</span>
                        timeout<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token comment">// The timeout was placed into a wrong slot. This should never happen.</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
                                <span class="token string">&quot;timeout.deadline (%d) &gt; deadline (%d)&quot;</span><span class="token punctuation">,</span> timeout<span class="token punctuation">.</span>deadline<span class="token punctuation">,</span> deadline<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">.</span><span class="token function">isCancelled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    next <span class="token operator">=</span> <span class="token function">remove</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u7ECF\u8FC7\u4E00\u8F6E\u5219\u5C06rounds\u9012\u51CF1</span>
                    timeout<span class="token punctuation">.</span>remainingRounds <span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                timeout <span class="token operator">=</span> next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">HashedWheelTimeout</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">HashedWheelTimeout</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Clear this bucket and return all not expired / cancelled <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Timeout</span></span><span class="token punctuation">}</span>s.
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clearTimeouts</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Timeout</span><span class="token punctuation">&gt;</span></span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token class-name">HashedWheelTimeout</span> <span class="token function">pollTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashedwheeltimeout" tabindex="-1"><a class="header-anchor" href="#hashedwheeltimeout" aria-hidden="true">#</a> HashedWheelTimeout</h3><p>\u8BE5\u7C7B\u4E2D\u4FDD\u5B58\u4E86\u4EFB\u52A1\u7684\u4E00\u4E9B\u4E1C\u897F\uFF0C\u4F8B\u5982\u5B83\u7684\u524D\u9A71\u540E\u7EE7timeout\u3001\u8F6E\u6570\u3001\u4EFB\u52A1\uFF08Runnable\uFF09\u3001deadline\u4EE5\u53CA\u4E00\u4E9B\u64CD\u4F5C\u72B6\u6001\u3001timeout\u4ECEbucket\u4E2D\u79FB\u9664\u4E4B\u7C7B\u7684\u65B9\u6CD5\u3002</p><p>\u4EE5\u4E0B\u662F\u90E8\u5206\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">HashedWheelTimeout</span> <span class="token keyword">implements</span> <span class="token class-name">Timeout</span><span class="token punctuation">,</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_INIT</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>       <span class="token comment">// \u521D\u59CB\u5316\u72B6\u6001</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_CANCELLED</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// timeout\u53D6\u6D88\u72B6\u6001</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_EXPIRED</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token comment">// timeout\u8FC7\u671F\u72B6\u6001</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HashedWheelTimeout</span><span class="token punctuation">&gt;</span></span> <span class="token constant">STATE_UPDATER</span> <span class="token operator">=</span>
            <span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token punctuation">.</span><span class="token function">newUpdater</span><span class="token punctuation">(</span><span class="token class-name">HashedWheelTimeout</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;state&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u72B6\u6001\u5B57\u6BB5state\u7684AtomicFieldUpdater</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">HashedWheelTimer</span> timer<span class="token punctuation">;</span>       <span class="token comment">// timer</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">TimerTask</span> task<span class="token punctuation">;</span>               <span class="token comment">// timeout\u5230\u671F\u4E86\u8981\u6267\u884C\u7684\u4EFB\u52A1</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> deadline<span class="token punctuation">;</span>                <span class="token comment">// timeout\u7684\u5230\u671F\u65F6\u95F4</span>

    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;unused&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FieldMayBeFinal&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;RedundantFieldInitialization&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token constant">ST_INIT</span><span class="token punctuation">;</span>       <span class="token comment">// \u72B6\u6001\u5B57\u6BB5\uFF0C\u521D\u59CB\u503C\u4E3A0</span>


    <span class="token keyword">long</span> remainingRounds<span class="token punctuation">;</span>                       <span class="token comment">// \u8F6E\u6570</span>

    <span class="token comment">// This will be used to chain timeouts in HashedWheelTimerBucket via a double-linked-list.</span>
    <span class="token comment">// As only the workerThread will act on it there is no need for synchronization / volatile.</span>
    <span class="token class-name">HashedWheelTimeout</span> next<span class="token punctuation">;</span>                    <span class="token comment">// next\u8282\u70B9</span>
    <span class="token class-name">HashedWheelTimeout</span> prev<span class="token punctuation">;</span>                    <span class="token comment">// prev\u8282\u70B9</span>

    <span class="token comment">// The bucket to which the timeout was added</span>
    <span class="token class-name">HashedWheelBucket</span> bucket<span class="token punctuation">;</span>                   <span class="token comment">// timeout\u6240\u5C5E\u7684bucket</span>

    <span class="token class-name">HashedWheelTimeout</span><span class="token punctuation">(</span><span class="token class-name">HashedWheelTimer</span> timer<span class="token punctuation">,</span> <span class="token class-name">TimerTask</span> task<span class="token punctuation">,</span> <span class="token keyword">long</span> deadline<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> timer<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>task <span class="token operator">=</span> task<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deadline <span class="token operator">=</span> deadline<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FEE\u6539timeout\u4E3A\u53D6\u6D88\u72B6\u6001</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token constant">ST_INIT</span><span class="token punctuation">,</span> <span class="token constant">ST_CANCELLED</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u653E\u5165\u53D6\u6D88\u7684timeout\u961F\u5217\u4E2D</span>
        timer<span class="token punctuation">.</span>cancelledTimeouts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HashedWheelBucket</span> bucket <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bucket<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bucket <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            bucket<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            timer<span class="token punctuation">.</span>pendingTimeouts<span class="token punctuation">.</span><span class="token function">decrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token keyword">int</span> expected<span class="token punctuation">,</span> <span class="token keyword">int</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">STATE_UPDATER</span><span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> expected<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">expire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BBE\u7F6E\u4E3Aexpire\u72B6\u6001</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token constant">ST_INIT</span><span class="token punctuation">,</span> <span class="token constant">ST_EXPIRED</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6267\u884Ctimeout\u7684\u4EFB\u52A1</span>
            timer<span class="token punctuation">.</span>taskExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;An exception was thrown while submit &quot;</span> <span class="token operator">+</span> <span class="token class-name">TimerTask</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token operator">+</span> <span class="token string">&quot; for execution.&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
    * \u5B9E\u73B0\u4E86Runnable
    */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            task<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;An exception was thrown by &quot;</span> <span class="token operator">+</span> <span class="token class-name">TimerTask</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="worker" tabindex="-1"><a class="header-anchor" href="#worker" aria-hidden="true">#</a> Worker</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Worker</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Timeout</span><span class="token punctuation">&gt;</span></span> unprocessedTimeouts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Timeout</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">long</span> tick<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Initialize the startTime.</span>
        startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>startTime <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// We use 0 as an indicator for the uninitialized value here, so make sure it&#39;s not 0 when initialized.</span>
            startTime <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// newTimeout\u90A3\u91CC\u7B49\u5F85\u521D\u59CB\u5316startTime</span>
        startTimeInitialized<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">long</span> deadline <span class="token operator">=</span> <span class="token function">waitForNextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>deadline <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>tick <span class="token operator">&amp;</span> mask<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">processCancelledTasks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// remove\u5DF2\u7ECF\u53D6\u6D88\u7684timeout</span>
                <span class="token class-name">HashedWheelBucket</span> bucket <span class="token operator">=</span> wheel<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// \u672C\u6B21tick\u4E2D\u8981\u5904\u7406\u7684bucket</span>
                <span class="token function">transferTimeoutsToBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// \u672C\u6B21tick\u4E2D\u4ECE\u961F\u5217\u4E2D\u5206\u914Dtimeout\u5230bucket\u4E2D</span>
                bucket<span class="token punctuation">.</span><span class="token function">expireTimeouts</span><span class="token punctuation">(</span>deadline<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// \u5904\u7406\u672C\u6B21\u9009\u4E2D\u7684bucket\u4E2D\u5DF2\u8FC7\u671F\u7684timeout\u6267\u884C\u5176\u4EFB\u52A1\u6216round\u51CF1</span>
                tick<span class="token operator">++</span><span class="token punctuation">;</span>                                 <span class="token comment">// \u9012\u589Etick</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant">WORKER_STATE_UPDATER</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">HashedWheelTimer</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">WORKER_STATE_STARTED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5224\u65AD\u72B6\u6001\u662F\u5426\u5904\u4E8ESTARTED</span>

        <span class="token comment">// \u8D70\u5230\u8FD9\u610F\u5473\u7740state\u4E3Ashutdown\u4E86</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HashedWheelBucket</span> bucket<span class="token operator">:</span> wheel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u904D\u5386\u5DF2\u7ECF\u5728bucket\u7684timeouts\uFF0C\u6E05\u9664\u5E76\u4E14\u5C06\u975Ecancel\u548C\u975Eexpired\u7684\u52A0\u5230unprocessedTimeouts\u4E2D</span>
            bucket<span class="token punctuation">.</span><span class="token function">clearTimeouts</span><span class="token punctuation">(</span>unprocessedTimeouts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E0D\u5728bucket\u800C\u5728\u961F\u5217\u4E2D\u7684timeouts\u4E0D\u662Fexpired\u7684\uFF0C\u4F46\u662F\u4E3Acancelled\u7684\u6392\u9664\u6389\uFF0C</span>
            <span class="token comment">// \u5373\u627E\u51FA\u6B63\u5E38\u72B6\u6001\u8FD8\u6CA1\u6709\u5904\u7406\u7684timeouts\u6DFB\u52A0\u5230unprocessedTimeouts\u4E2D</span>
            <span class="token class-name">HashedWheelTimeout</span> timeout <span class="token operator">=</span> timeouts<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">.</span><span class="token function">isCancelled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                unprocessedTimeouts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">processCancelledTasks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">transferTimeoutsToBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// transfer only max. 100000 timeouts per tick to prevent a thread to stale the workerThread when it just</span>
        <span class="token comment">// adds new timeouts in a loop.</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u6BCF\u6B21tick\u53D6100000\u4E2A\u5206\u914D\u5230bucket\u4E2D</span>
            <span class="token class-name">HashedWheelTimeout</span> timeout <span class="token operator">=</span> timeouts<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// all processed</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">HashedWheelTimeout</span><span class="token punctuation">.</span><span class="token constant">ST_CANCELLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Was cancelled in the meantime.</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">long</span> calculated <span class="token operator">=</span> timeout<span class="token punctuation">.</span>deadline <span class="token operator">/</span> tickDuration<span class="token punctuation">;</span>
            timeout<span class="token punctuation">.</span>remainingRounds <span class="token operator">=</span> <span class="token punctuation">(</span>calculated <span class="token operator">-</span> tick<span class="token punctuation">)</span> <span class="token operator">/</span> wheel<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

            <span class="token keyword">final</span> <span class="token keyword">long</span> ticks <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>calculated<span class="token punctuation">,</span> tick<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ensure we don&#39;t schedule for past.</span>
            <span class="token keyword">int</span> stopIndex <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ticks <span class="token operator">&amp;</span> mask<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u6A21\u5B9A\u4F4D</span>

            <span class="token class-name">HashedWheelBucket</span> bucket <span class="token operator">=</span> wheel<span class="token punctuation">[</span>stopIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// \u585E\u5230\u5BF9\u5E94\u4F4D\u7F6E\u7684bucket\u94FE\u8868</span>
            bucket<span class="token punctuation">.</span><span class="token function">addTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">processCancelledTasks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">HashedWheelTimeout</span> timeout <span class="token operator">=</span> cancelledTimeouts<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// all processed</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                timeout<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;An exception was thrown while process a cancellation task&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * calculate goal nanoTime from startTime and current tick number,
        * then wait until that goal has been reached.
        * <span class="token keyword">@return</span> Long.MIN_VALUE if received a shutdown request,
        * current time otherwise (with Long.MIN_VALUE changed by +1)
        */</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> <span class="token function">waitForNextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> deadline <span class="token operator">=</span> tickDuration <span class="token operator">*</span> <span class="token punctuation">(</span>tick <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">long</span> currentTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startTime<span class="token punctuation">;</span>
            <span class="token keyword">long</span> sleepTimeMs <span class="token operator">=</span> <span class="token punctuation">(</span>deadline <span class="token operator">-</span> currentTime <span class="token operator">+</span> <span class="token number">999999</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>sleepTimeMs <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>currentTime <span class="token operator">==</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> currentTime<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// Check if we run on windows, as if thats the case we will need</span>
            <span class="token comment">// to round the sleepTime as workaround for a bug that only affect</span>
            <span class="token comment">// the JVM if it runs on windows.</span>
            <span class="token comment">//</span>
            <span class="token comment">// See https://github.com/netty/netty/issues/356</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">PlatformDependent</span><span class="token punctuation">.</span><span class="token function">isWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sleepTimeMs <span class="token operator">=</span> sleepTimeMs <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sleepTimeMs <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sleepTimeMs <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>sleepTimeMs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">WORKER_STATE_UPDATER</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">HashedWheelTimer</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">WORKER_STATE_SHUTDOWN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Timeout</span><span class="token punctuation">&gt;</span></span> <span class="token function">unprocessedTimeouts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableSet</span><span class="token punctuation">(</span>unprocessedTimeouts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[e];function c(l,i){return s(),a("div",null,o)}var d=n(p,[["render",c],["__file","Netty-HashedWheelTimer.html.vue"]]);export{d as default};
